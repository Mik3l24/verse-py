# Generated from parser/Verbose.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,65,493,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,1,0,4,0,135,8,0,11,0,12,0,136,1,0,1,0,1,1,1,1,1,1,1,1,5,
        1,145,8,1,10,1,12,1,148,9,1,1,1,1,1,1,2,5,2,153,8,2,10,2,12,2,156,
        9,2,1,2,1,2,4,2,160,8,2,11,2,12,2,161,1,3,4,3,165,8,3,11,3,12,3,
        166,1,4,1,4,1,4,1,4,4,4,173,8,4,11,4,12,4,174,1,5,1,5,1,5,1,5,4,
        5,181,8,5,11,5,12,5,182,1,6,1,6,1,6,1,6,5,6,189,8,6,10,6,12,6,192,
        9,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,3,10,205,8,10,
        1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,
        1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,3,21,230,8,21,
        1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,
        1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
        3,30,258,8,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,
        1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,35,
        1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,
        1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
        1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,
        1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,
        1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,48,
        1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,
        1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,
        1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,
        1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
        1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,
        1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,
        1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,
        1,61,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
        1,63,1,63,1,63,1,63,1,63,3,63,483,8,63,1,64,1,64,5,64,487,8,64,10,
        64,12,64,490,9,64,1,65,1,65,0,0,66,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
        15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
        51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
        121,61,123,62,125,63,127,64,129,65,131,0,1,0,8,3,0,9,10,13,13,32,
        32,2,0,10,10,13,13,3,0,48,57,65,70,97,102,2,0,48,49,95,95,2,0,34,
        34,92,92,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,
        48,57,505,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
        0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,
        0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,
        0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,
        0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
        0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,
        0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
        0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,
        0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,
        0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,
        0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,
        109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,
        0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,
        1,0,0,0,0,129,1,0,0,0,1,134,1,0,0,0,3,140,1,0,0,0,5,154,1,0,0,0,
        7,164,1,0,0,0,9,168,1,0,0,0,11,176,1,0,0,0,13,184,1,0,0,0,15,195,
        1,0,0,0,17,197,1,0,0,0,19,199,1,0,0,0,21,204,1,0,0,0,23,206,1,0,
        0,0,25,208,1,0,0,0,27,210,1,0,0,0,29,212,1,0,0,0,31,214,1,0,0,0,
        33,216,1,0,0,0,35,218,1,0,0,0,37,220,1,0,0,0,39,222,1,0,0,0,41,224,
        1,0,0,0,43,229,1,0,0,0,45,231,1,0,0,0,47,234,1,0,0,0,49,236,1,0,
        0,0,51,238,1,0,0,0,53,241,1,0,0,0,55,244,1,0,0,0,57,246,1,0,0,0,
        59,248,1,0,0,0,61,257,1,0,0,0,63,259,1,0,0,0,65,265,1,0,0,0,67,270,
        1,0,0,0,69,275,1,0,0,0,71,278,1,0,0,0,73,287,1,0,0,0,75,297,1,0,
        0,0,77,305,1,0,0,0,79,312,1,0,0,0,81,318,1,0,0,0,83,321,1,0,0,0,
        85,326,1,0,0,0,87,336,1,0,0,0,89,343,1,0,0,0,91,350,1,0,0,0,93,359,
        1,0,0,0,95,366,1,0,0,0,97,372,1,0,0,0,99,381,1,0,0,0,101,391,1,0,
        0,0,103,394,1,0,0,0,105,400,1,0,0,0,107,404,1,0,0,0,109,413,1,0,
        0,0,111,422,1,0,0,0,113,430,1,0,0,0,115,439,1,0,0,0,117,446,1,0,
        0,0,119,452,1,0,0,0,121,458,1,0,0,0,123,461,1,0,0,0,125,465,1,0,
        0,0,127,482,1,0,0,0,129,484,1,0,0,0,131,491,1,0,0,0,133,135,7,0,
        0,0,134,133,1,0,0,0,135,136,1,0,0,0,136,134,1,0,0,0,136,137,1,0,
        0,0,137,138,1,0,0,0,138,139,6,0,0,0,139,2,1,0,0,0,140,141,5,47,0,
        0,141,142,5,47,0,0,142,146,1,0,0,0,143,145,8,1,0,0,144,143,1,0,0,
        0,145,148,1,0,0,0,146,144,1,0,0,0,146,147,1,0,0,0,147,149,1,0,0,
        0,148,146,1,0,0,0,149,150,6,1,0,0,150,4,1,0,0,0,151,153,3,131,65,
        0,152,151,1,0,0,0,153,156,1,0,0,0,154,152,1,0,0,0,154,155,1,0,0,
        0,155,157,1,0,0,0,156,154,1,0,0,0,157,159,5,46,0,0,158,160,3,131,
        65,0,159,158,1,0,0,0,160,161,1,0,0,0,161,159,1,0,0,0,161,162,1,0,
        0,0,162,6,1,0,0,0,163,165,3,131,65,0,164,163,1,0,0,0,165,166,1,0,
        0,0,166,164,1,0,0,0,166,167,1,0,0,0,167,8,1,0,0,0,168,169,5,48,0,
        0,169,170,5,120,0,0,170,172,1,0,0,0,171,173,7,2,0,0,172,171,1,0,
        0,0,173,174,1,0,0,0,174,172,1,0,0,0,174,175,1,0,0,0,175,10,1,0,0,
        0,176,177,5,48,0,0,177,178,5,98,0,0,178,180,1,0,0,0,179,181,7,3,
        0,0,180,179,1,0,0,0,181,182,1,0,0,0,182,180,1,0,0,0,182,183,1,0,
        0,0,183,12,1,0,0,0,184,190,5,34,0,0,185,189,8,4,0,0,186,187,5,92,
        0,0,187,189,9,0,0,0,188,185,1,0,0,0,188,186,1,0,0,0,189,192,1,0,
        0,0,190,188,1,0,0,0,190,191,1,0,0,0,191,193,1,0,0,0,192,190,1,0,
        0,0,193,194,5,34,0,0,194,14,1,0,0,0,195,196,5,46,0,0,196,16,1,0,
        0,0,197,198,5,44,0,0,198,18,1,0,0,0,199,200,5,59,0,0,200,20,1,0,
        0,0,201,205,5,39,0,0,202,203,5,39,0,0,203,205,5,115,0,0,204,201,
        1,0,0,0,204,202,1,0,0,0,205,22,1,0,0,0,206,207,5,40,0,0,207,24,1,
        0,0,0,208,209,5,41,0,0,209,26,1,0,0,0,210,211,5,91,0,0,211,28,1,
        0,0,0,212,213,5,93,0,0,213,30,1,0,0,0,214,215,5,123,0,0,215,32,1,
        0,0,0,216,217,5,125,0,0,217,34,1,0,0,0,218,219,5,43,0,0,219,36,1,
        0,0,0,220,221,5,45,0,0,221,38,1,0,0,0,222,223,5,42,0,0,223,40,1,
        0,0,0,224,225,5,47,0,0,225,42,1,0,0,0,226,230,5,61,0,0,227,228,5,
        61,0,0,228,230,5,61,0,0,229,226,1,0,0,0,229,227,1,0,0,0,230,44,1,
        0,0,0,231,232,5,33,0,0,232,233,5,61,0,0,233,46,1,0,0,0,234,235,5,
        60,0,0,235,48,1,0,0,0,236,237,5,62,0,0,237,50,1,0,0,0,238,239,5,
        60,0,0,239,240,5,61,0,0,240,52,1,0,0,0,241,242,5,62,0,0,242,243,
        5,61,0,0,243,54,1,0,0,0,244,245,5,38,0,0,245,56,1,0,0,0,246,247,
        5,124,0,0,247,58,1,0,0,0,248,249,5,94,0,0,249,60,1,0,0,0,250,251,
        5,105,0,0,251,252,5,110,0,0,252,253,5,118,0,0,253,254,5,101,0,0,
        254,255,5,114,0,0,255,258,5,116,0,0,256,258,5,126,0,0,257,250,1,
        0,0,0,257,256,1,0,0,0,258,62,1,0,0,0,259,260,5,110,0,0,260,261,5,
        97,0,0,261,262,5,109,0,0,262,263,5,101,0,0,263,264,5,100,0,0,264,
        64,1,0,0,0,265,266,5,102,0,0,266,267,5,114,0,0,267,268,5,111,0,0,
        268,269,5,109,0,0,269,66,1,0,0,0,270,271,5,119,0,0,271,272,5,105,
        0,0,272,273,5,116,0,0,273,274,5,104,0,0,274,68,1,0,0,0,275,276,5,
        116,0,0,276,277,5,111,0,0,277,70,1,0,0,0,278,279,5,102,0,0,279,280,
        5,117,0,0,280,281,5,110,0,0,281,282,5,99,0,0,282,283,5,116,0,0,283,
        284,5,105,0,0,284,285,5,111,0,0,285,286,5,110,0,0,286,72,1,0,0,0,
        287,288,5,97,0,0,288,289,5,114,0,0,289,290,5,103,0,0,290,291,5,117,
        0,0,291,292,5,109,0,0,292,293,5,101,0,0,293,294,5,110,0,0,294,295,
        5,116,0,0,295,296,5,115,0,0,296,74,1,0,0,0,297,298,5,116,0,0,298,
        299,5,97,0,0,299,300,5,114,0,0,300,301,5,103,0,0,301,302,5,101,0,
        0,302,303,5,116,0,0,303,304,5,115,0,0,304,76,1,0,0,0,305,306,5,116,
        0,0,306,307,5,97,0,0,307,308,5,114,0,0,308,309,5,103,0,0,309,310,
        5,101,0,0,310,311,5,116,0,0,311,78,1,0,0,0,312,313,5,119,0,0,313,
        314,5,104,0,0,314,315,5,105,0,0,315,316,5,108,0,0,316,317,5,101,
        0,0,317,80,1,0,0,0,318,319,5,105,0,0,319,320,5,102,0,0,320,82,1,
        0,0,0,321,322,5,101,0,0,322,323,5,108,0,0,323,324,5,115,0,0,324,
        325,5,101,0,0,325,84,1,0,0,0,326,327,5,114,0,0,327,328,5,101,0,0,
        328,329,5,116,0,0,329,330,5,117,0,0,330,331,5,114,0,0,331,332,5,
        110,0,0,332,333,5,105,0,0,333,334,5,110,0,0,334,335,5,103,0,0,335,
        86,1,0,0,0,336,337,5,105,0,0,337,338,5,110,0,0,338,339,5,108,0,0,
        339,340,5,105,0,0,340,341,5,110,0,0,341,342,5,101,0,0,342,88,1,0,
        0,0,343,344,5,102,0,0,344,345,5,111,0,0,345,346,5,114,0,0,346,347,
        5,99,0,0,347,348,5,101,0,0,348,349,5,100,0,0,349,90,1,0,0,0,350,
        351,5,111,0,0,351,352,5,112,0,0,352,353,5,116,0,0,353,354,5,105,
        0,0,354,355,5,111,0,0,355,356,5,110,0,0,356,357,5,97,0,0,357,358,
        5,108,0,0,358,92,1,0,0,0,359,360,5,114,0,0,360,361,5,101,0,0,361,
        362,5,116,0,0,362,363,5,117,0,0,363,364,5,114,0,0,364,365,5,110,
        0,0,365,94,1,0,0,0,366,367,5,98,0,0,367,368,5,114,0,0,368,369,5,
        101,0,0,369,370,5,97,0,0,370,371,5,107,0,0,371,96,1,0,0,0,372,373,
        5,99,0,0,373,374,5,111,0,0,374,375,5,110,0,0,375,376,5,116,0,0,376,
        377,5,105,0,0,377,378,5,110,0,0,378,379,5,117,0,0,379,380,5,101,
        0,0,380,98,1,0,0,0,381,382,5,112,0,0,382,383,5,114,0,0,383,384,5,
        111,0,0,384,385,5,99,0,0,385,386,5,101,0,0,386,387,5,100,0,0,387,
        388,5,117,0,0,388,389,5,114,0,0,389,390,5,101,0,0,390,100,1,0,0,
        0,391,392,5,100,0,0,392,393,5,111,0,0,393,102,1,0,0,0,394,395,5,
        98,0,0,395,396,5,101,0,0,396,397,5,103,0,0,397,398,5,105,0,0,398,
        399,5,110,0,0,399,104,1,0,0,0,400,401,5,101,0,0,401,402,5,110,0,
        0,402,403,5,100,0,0,403,106,1,0,0,0,404,405,5,118,0,0,405,406,5,
        97,0,0,406,407,5,114,0,0,407,408,5,105,0,0,408,409,5,97,0,0,409,
        410,5,98,0,0,410,411,5,108,0,0,411,412,5,101,0,0,412,108,1,0,0,0,
        413,414,5,99,0,0,414,415,5,111,0,0,415,416,5,110,0,0,416,417,5,115,
        0,0,417,418,5,116,0,0,418,419,5,97,0,0,419,420,5,110,0,0,420,421,
        5,116,0,0,421,110,1,0,0,0,422,423,5,112,0,0,423,424,5,111,0,0,424,
        425,5,105,0,0,425,426,5,110,0,0,426,427,5,116,0,0,427,428,5,101,
        0,0,428,429,5,114,0,0,429,112,1,0,0,0,430,431,5,97,0,0,431,432,5,
        115,0,0,432,433,5,115,0,0,433,434,5,105,0,0,434,435,5,103,0,0,435,
        436,5,110,0,0,436,437,5,101,0,0,437,438,5,100,0,0,438,114,1,0,0,
        0,439,440,5,97,0,0,440,441,5,115,0,0,441,442,5,115,0,0,442,443,5,
        105,0,0,443,444,5,103,0,0,444,445,5,110,0,0,445,116,1,0,0,0,446,
        447,5,118,0,0,447,448,5,97,0,0,448,449,5,108,0,0,449,450,5,117,0,
        0,450,451,5,101,0,0,451,118,1,0,0,0,452,453,5,105,0,0,453,454,5,
        110,0,0,454,455,5,100,0,0,455,456,5,101,0,0,456,457,5,120,0,0,457,
        120,1,0,0,0,458,459,5,97,0,0,459,460,5,116,0,0,460,122,1,0,0,0,461,
        462,5,110,0,0,462,463,5,111,0,0,463,464,5,116,0,0,464,124,1,0,0,
        0,465,466,5,99,0,0,466,467,5,97,0,0,467,468,5,108,0,0,468,469,5,
        108,0,0,469,126,1,0,0,0,470,471,5,115,0,0,471,472,5,105,0,0,472,
        473,5,122,0,0,473,474,5,101,0,0,474,475,5,111,0,0,475,483,5,102,
        0,0,476,477,5,115,0,0,477,478,5,105,0,0,478,479,5,122,0,0,479,480,
        5,101,0,0,480,481,5,79,0,0,481,483,5,102,0,0,482,470,1,0,0,0,482,
        476,1,0,0,0,483,128,1,0,0,0,484,488,7,5,0,0,485,487,7,6,0,0,486,
        485,1,0,0,0,487,490,1,0,0,0,488,486,1,0,0,0,488,489,1,0,0,0,489,
        130,1,0,0,0,490,488,1,0,0,0,491,492,7,7,0,0,492,132,1,0,0,0,15,0,
        136,146,154,161,166,174,182,188,190,204,229,257,482,488,1,6,0,0
    ]

class VerboseLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    WS = 1
    INLINE_COMMENT = 2
    V_FLOAT = 3
    V_INTEGER = 4
    V_INTEGER_HEX = 5
    V_INTEGER_BIN = 6
    V_STRING = 7
    P_PERIOD = 8
    P_COMMA = 9
    P_SEMIC = 10
    P_ACCESSOR = 11
    L_PARENTHESIS = 12
    R_PARENTHESIS = 13
    L_BRACKET = 14
    R_BRACKET = 15
    L_BRACE = 16
    R_BRACE = 17
    O_PLUS = 18
    O_MINUS = 19
    O_TIMES = 20
    O_DIVIDE = 21
    O_EQUAL = 22
    O_NOT_EQUAL = 23
    O_LESS = 24
    O_GREATER = 25
    O_LESS_EQUAL = 26
    O_GREATER_EQUAL = 27
    O_BIT_AND = 28
    O_BIT_OR = 29
    O_BIT_XOR = 30
    O_BIT_NOT = 31
    NAMED = 32
    FROM = 33
    WITH = 34
    TO = 35
    FUNCTION = 36
    ARGUMENTS = 37
    TARGETS = 38
    TARGET = 39
    WHILE = 40
    IF = 41
    ELSE = 42
    RETURNING = 43
    INLINE = 44
    FORCED = 45
    OPTIONAL = 46
    RETURN = 47
    BREAK = 48
    CONTINUE = 49
    PROCEDURE = 50
    DO = 51
    BEGIN = 52
    END = 53
    VARIABLE = 54
    CONSTANT = 55
    POINTER = 56
    ASSIGNED = 57
    ASSIGN = 58
    VALUE = 59
    INDEX = 60
    AT = 61
    NOT = 62
    CALL = 63
    SIZEOF = 64
    V_IDENTIFIER = 65

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "','", "';'", "'('", "')'", "'['", "']'", "'{'", "'}'", 
            "'+'", "'-'", "'*'", "'/'", "'!='", "'<'", "'>'", "'<='", "'>='", 
            "'&'", "'|'", "'^'", "'named'", "'from'", "'with'", "'to'", 
            "'function'", "'arguments'", "'targets'", "'target'", "'while'", 
            "'if'", "'else'", "'returning'", "'inline'", "'forced'", "'optional'", 
            "'return'", "'break'", "'continue'", "'procedure'", "'do'", 
            "'begin'", "'end'", "'variable'", "'constant'", "'pointer'", 
            "'assigned'", "'assign'", "'value'", "'index'", "'at'", "'not'", 
            "'call'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "INLINE_COMMENT", "V_FLOAT", "V_INTEGER", "V_INTEGER_HEX", 
            "V_INTEGER_BIN", "V_STRING", "P_PERIOD", "P_COMMA", "P_SEMIC", 
            "P_ACCESSOR", "L_PARENTHESIS", "R_PARENTHESIS", "L_BRACKET", 
            "R_BRACKET", "L_BRACE", "R_BRACE", "O_PLUS", "O_MINUS", "O_TIMES", 
            "O_DIVIDE", "O_EQUAL", "O_NOT_EQUAL", "O_LESS", "O_GREATER", 
            "O_LESS_EQUAL", "O_GREATER_EQUAL", "O_BIT_AND", "O_BIT_OR", 
            "O_BIT_XOR", "O_BIT_NOT", "NAMED", "FROM", "WITH", "TO", "FUNCTION", 
            "ARGUMENTS", "TARGETS", "TARGET", "WHILE", "IF", "ELSE", "RETURNING", 
            "INLINE", "FORCED", "OPTIONAL", "RETURN", "BREAK", "CONTINUE", 
            "PROCEDURE", "DO", "BEGIN", "END", "VARIABLE", "CONSTANT", "POINTER", 
            "ASSIGNED", "ASSIGN", "VALUE", "INDEX", "AT", "NOT", "CALL", 
            "SIZEOF", "V_IDENTIFIER" ]

    ruleNames = [ "WS", "INLINE_COMMENT", "V_FLOAT", "V_INTEGER", "V_INTEGER_HEX", 
                  "V_INTEGER_BIN", "V_STRING", "P_PERIOD", "P_COMMA", "P_SEMIC", 
                  "P_ACCESSOR", "L_PARENTHESIS", "R_PARENTHESIS", "L_BRACKET", 
                  "R_BRACKET", "L_BRACE", "R_BRACE", "O_PLUS", "O_MINUS", 
                  "O_TIMES", "O_DIVIDE", "O_EQUAL", "O_NOT_EQUAL", "O_LESS", 
                  "O_GREATER", "O_LESS_EQUAL", "O_GREATER_EQUAL", "O_BIT_AND", 
                  "O_BIT_OR", "O_BIT_XOR", "O_BIT_NOT", "NAMED", "FROM", 
                  "WITH", "TO", "FUNCTION", "ARGUMENTS", "TARGETS", "TARGET", 
                  "WHILE", "IF", "ELSE", "RETURNING", "INLINE", "FORCED", 
                  "OPTIONAL", "RETURN", "BREAK", "CONTINUE", "PROCEDURE", 
                  "DO", "BEGIN", "END", "VARIABLE", "CONSTANT", "POINTER", 
                  "ASSIGNED", "ASSIGN", "VALUE", "INDEX", "AT", "NOT", "CALL", 
                  "SIZEOF", "V_IDENTIFIER", "DIGIT" ]

    grammarFileName = "Verbose.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


