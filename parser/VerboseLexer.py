# Generated from parser/Verbose.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,58,419,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,1,0,4,0,121,8,0,11,0,12,0,122,1,0,1,0,1,1,1,1,1,1,1,1,5,1,131,
        8,1,10,1,12,1,134,9,1,1,1,1,1,1,2,5,2,139,8,2,10,2,12,2,142,9,2,
        1,2,1,2,4,2,146,8,2,11,2,12,2,147,1,3,4,3,151,8,3,11,3,12,3,152,
        1,4,1,4,1,4,1,4,5,4,159,8,4,10,4,12,4,162,9,4,1,4,1,4,1,5,1,5,1,
        6,1,6,1,7,1,7,1,8,1,8,1,8,3,8,175,8,8,1,9,1,9,1,10,1,10,1,11,1,11,
        1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,
        1,18,1,19,1,19,1,19,3,19,200,8,19,1,20,1,20,1,20,1,21,1,21,1,22,
        1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,3,28,228,8,28,1,29,1,29,1,29,
        1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,
        1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,
        1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,
        1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,
        1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,
        1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,
        1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,
        1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,
        1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
        1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,
        1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,
        1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,
        1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,57,1,57,5,57,413,
        8,57,10,57,12,57,416,9,57,1,58,1,58,0,0,59,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
        57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,
        79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
        101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,0,1,
        0,6,3,0,9,10,13,13,32,32,2,0,10,10,13,13,2,0,34,34,92,92,3,0,65,
        90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,428,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
        0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
        0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,
        0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
        0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
        0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
        0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
        0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,
        0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,
        1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,1,120,1,0,0,0,3,126,1,0,0,0,
        5,140,1,0,0,0,7,150,1,0,0,0,9,154,1,0,0,0,11,165,1,0,0,0,13,167,
        1,0,0,0,15,169,1,0,0,0,17,174,1,0,0,0,19,176,1,0,0,0,21,178,1,0,
        0,0,23,180,1,0,0,0,25,182,1,0,0,0,27,184,1,0,0,0,29,186,1,0,0,0,
        31,188,1,0,0,0,33,190,1,0,0,0,35,192,1,0,0,0,37,194,1,0,0,0,39,199,
        1,0,0,0,41,201,1,0,0,0,43,204,1,0,0,0,45,206,1,0,0,0,47,208,1,0,
        0,0,49,211,1,0,0,0,51,214,1,0,0,0,53,216,1,0,0,0,55,218,1,0,0,0,
        57,227,1,0,0,0,59,229,1,0,0,0,61,235,1,0,0,0,63,240,1,0,0,0,65,245,
        1,0,0,0,67,248,1,0,0,0,69,257,1,0,0,0,71,267,1,0,0,0,73,273,1,0,
        0,0,75,276,1,0,0,0,77,281,1,0,0,0,79,291,1,0,0,0,81,298,1,0,0,0,
        83,305,1,0,0,0,85,312,1,0,0,0,87,318,1,0,0,0,89,327,1,0,0,0,91,337,
        1,0,0,0,93,340,1,0,0,0,95,344,1,0,0,0,97,353,1,0,0,0,99,362,1,0,
        0,0,101,370,1,0,0,0,103,379,1,0,0,0,105,386,1,0,0,0,107,392,1,0,
        0,0,109,398,1,0,0,0,111,401,1,0,0,0,113,405,1,0,0,0,115,410,1,0,
        0,0,117,417,1,0,0,0,119,121,7,0,0,0,120,119,1,0,0,0,121,122,1,0,
        0,0,122,120,1,0,0,0,122,123,1,0,0,0,123,124,1,0,0,0,124,125,6,0,
        0,0,125,2,1,0,0,0,126,127,5,47,0,0,127,128,5,47,0,0,128,132,1,0,
        0,0,129,131,8,1,0,0,130,129,1,0,0,0,131,134,1,0,0,0,132,130,1,0,
        0,0,132,133,1,0,0,0,133,135,1,0,0,0,134,132,1,0,0,0,135,136,6,1,
        0,0,136,4,1,0,0,0,137,139,3,117,58,0,138,137,1,0,0,0,139,142,1,0,
        0,0,140,138,1,0,0,0,140,141,1,0,0,0,141,143,1,0,0,0,142,140,1,0,
        0,0,143,145,5,46,0,0,144,146,3,117,58,0,145,144,1,0,0,0,146,147,
        1,0,0,0,147,145,1,0,0,0,147,148,1,0,0,0,148,6,1,0,0,0,149,151,3,
        117,58,0,150,149,1,0,0,0,151,152,1,0,0,0,152,150,1,0,0,0,152,153,
        1,0,0,0,153,8,1,0,0,0,154,160,5,34,0,0,155,159,8,2,0,0,156,157,5,
        92,0,0,157,159,9,0,0,0,158,155,1,0,0,0,158,156,1,0,0,0,159,162,1,
        0,0,0,160,158,1,0,0,0,160,161,1,0,0,0,161,163,1,0,0,0,162,160,1,
        0,0,0,163,164,5,34,0,0,164,10,1,0,0,0,165,166,5,46,0,0,166,12,1,
        0,0,0,167,168,5,44,0,0,168,14,1,0,0,0,169,170,5,59,0,0,170,16,1,
        0,0,0,171,175,5,39,0,0,172,173,5,39,0,0,173,175,5,115,0,0,174,171,
        1,0,0,0,174,172,1,0,0,0,175,18,1,0,0,0,176,177,5,40,0,0,177,20,1,
        0,0,0,178,179,5,41,0,0,179,22,1,0,0,0,180,181,5,91,0,0,181,24,1,
        0,0,0,182,183,5,93,0,0,183,26,1,0,0,0,184,185,5,123,0,0,185,28,1,
        0,0,0,186,187,5,125,0,0,187,30,1,0,0,0,188,189,5,43,0,0,189,32,1,
        0,0,0,190,191,5,45,0,0,191,34,1,0,0,0,192,193,5,42,0,0,193,36,1,
        0,0,0,194,195,5,47,0,0,195,38,1,0,0,0,196,200,5,61,0,0,197,198,5,
        61,0,0,198,200,5,61,0,0,199,196,1,0,0,0,199,197,1,0,0,0,200,40,1,
        0,0,0,201,202,5,33,0,0,202,203,5,61,0,0,203,42,1,0,0,0,204,205,5,
        60,0,0,205,44,1,0,0,0,206,207,5,62,0,0,207,46,1,0,0,0,208,209,5,
        60,0,0,209,210,5,61,0,0,210,48,1,0,0,0,211,212,5,62,0,0,212,213,
        5,61,0,0,213,50,1,0,0,0,214,215,5,38,0,0,215,52,1,0,0,0,216,217,
        5,124,0,0,217,54,1,0,0,0,218,219,5,94,0,0,219,56,1,0,0,0,220,221,
        5,105,0,0,221,222,5,110,0,0,222,223,5,118,0,0,223,224,5,101,0,0,
        224,225,5,114,0,0,225,228,5,116,0,0,226,228,5,126,0,0,227,220,1,
        0,0,0,227,226,1,0,0,0,228,58,1,0,0,0,229,230,5,110,0,0,230,231,5,
        97,0,0,231,232,5,109,0,0,232,233,5,101,0,0,233,234,5,100,0,0,234,
        60,1,0,0,0,235,236,5,102,0,0,236,237,5,114,0,0,237,238,5,111,0,0,
        238,239,5,109,0,0,239,62,1,0,0,0,240,241,5,119,0,0,241,242,5,105,
        0,0,242,243,5,116,0,0,243,244,5,104,0,0,244,64,1,0,0,0,245,246,5,
        116,0,0,246,247,5,111,0,0,247,66,1,0,0,0,248,249,5,102,0,0,249,250,
        5,117,0,0,250,251,5,110,0,0,251,252,5,99,0,0,252,253,5,116,0,0,253,
        254,5,105,0,0,254,255,5,111,0,0,255,256,5,110,0,0,256,68,1,0,0,0,
        257,258,5,97,0,0,258,259,5,114,0,0,259,260,5,103,0,0,260,261,5,117,
        0,0,261,262,5,109,0,0,262,263,5,101,0,0,263,264,5,110,0,0,264,265,
        5,116,0,0,265,266,5,115,0,0,266,70,1,0,0,0,267,268,5,119,0,0,268,
        269,5,104,0,0,269,270,5,105,0,0,270,271,5,108,0,0,271,272,5,101,
        0,0,272,72,1,0,0,0,273,274,5,105,0,0,274,275,5,102,0,0,275,74,1,
        0,0,0,276,277,5,101,0,0,277,278,5,108,0,0,278,279,5,115,0,0,279,
        280,5,101,0,0,280,76,1,0,0,0,281,282,5,114,0,0,282,283,5,101,0,0,
        283,284,5,116,0,0,284,285,5,117,0,0,285,286,5,114,0,0,286,287,5,
        110,0,0,287,288,5,105,0,0,288,289,5,110,0,0,289,290,5,103,0,0,290,
        78,1,0,0,0,291,292,5,105,0,0,292,293,5,110,0,0,293,294,5,108,0,0,
        294,295,5,105,0,0,295,296,5,110,0,0,296,297,5,101,0,0,297,80,1,0,
        0,0,298,299,5,102,0,0,299,300,5,111,0,0,300,301,5,114,0,0,301,302,
        5,99,0,0,302,303,5,101,0,0,303,304,5,100,0,0,304,82,1,0,0,0,305,
        306,5,114,0,0,306,307,5,101,0,0,307,308,5,116,0,0,308,309,5,117,
        0,0,309,310,5,114,0,0,310,311,5,110,0,0,311,84,1,0,0,0,312,313,5,
        98,0,0,313,314,5,114,0,0,314,315,5,101,0,0,315,316,5,97,0,0,316,
        317,5,107,0,0,317,86,1,0,0,0,318,319,5,99,0,0,319,320,5,111,0,0,
        320,321,5,110,0,0,321,322,5,116,0,0,322,323,5,105,0,0,323,324,5,
        110,0,0,324,325,5,117,0,0,325,326,5,101,0,0,326,88,1,0,0,0,327,328,
        5,112,0,0,328,329,5,114,0,0,329,330,5,111,0,0,330,331,5,99,0,0,331,
        332,5,101,0,0,332,333,5,100,0,0,333,334,5,117,0,0,334,335,5,114,
        0,0,335,336,5,101,0,0,336,90,1,0,0,0,337,338,5,100,0,0,338,339,5,
        111,0,0,339,92,1,0,0,0,340,341,5,101,0,0,341,342,5,110,0,0,342,343,
        5,100,0,0,343,94,1,0,0,0,344,345,5,118,0,0,345,346,5,97,0,0,346,
        347,5,114,0,0,347,348,5,105,0,0,348,349,5,97,0,0,349,350,5,98,0,
        0,350,351,5,108,0,0,351,352,5,101,0,0,352,96,1,0,0,0,353,354,5,99,
        0,0,354,355,5,111,0,0,355,356,5,110,0,0,356,357,5,115,0,0,357,358,
        5,116,0,0,358,359,5,97,0,0,359,360,5,110,0,0,360,361,5,116,0,0,361,
        98,1,0,0,0,362,363,5,112,0,0,363,364,5,111,0,0,364,365,5,105,0,0,
        365,366,5,110,0,0,366,367,5,116,0,0,367,368,5,101,0,0,368,369,5,
        114,0,0,369,100,1,0,0,0,370,371,5,97,0,0,371,372,5,115,0,0,372,373,
        5,115,0,0,373,374,5,105,0,0,374,375,5,103,0,0,375,376,5,110,0,0,
        376,377,5,101,0,0,377,378,5,100,0,0,378,102,1,0,0,0,379,380,5,97,
        0,0,380,381,5,115,0,0,381,382,5,115,0,0,382,383,5,105,0,0,383,384,
        5,103,0,0,384,385,5,110,0,0,385,104,1,0,0,0,386,387,5,118,0,0,387,
        388,5,97,0,0,388,389,5,108,0,0,389,390,5,117,0,0,390,391,5,101,0,
        0,391,106,1,0,0,0,392,393,5,105,0,0,393,394,5,110,0,0,394,395,5,
        100,0,0,395,396,5,101,0,0,396,397,5,120,0,0,397,108,1,0,0,0,398,
        399,5,97,0,0,399,400,5,116,0,0,400,110,1,0,0,0,401,402,5,110,0,0,
        402,403,5,111,0,0,403,404,5,116,0,0,404,112,1,0,0,0,405,406,5,99,
        0,0,406,407,5,97,0,0,407,408,5,108,0,0,408,409,5,108,0,0,409,114,
        1,0,0,0,410,414,7,3,0,0,411,413,7,4,0,0,412,411,1,0,0,0,413,416,
        1,0,0,0,414,412,1,0,0,0,414,415,1,0,0,0,415,116,1,0,0,0,416,414,
        1,0,0,0,417,418,7,5,0,0,418,118,1,0,0,0,12,0,122,132,140,147,152,
        158,160,174,199,227,414,1,6,0,0
    ]

class VerboseLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    WS = 1
    INLINE_COMMENT = 2
    V_FLOAT = 3
    V_INTEGER = 4
    V_STRING = 5
    P_PERIOD = 6
    P_COMMA = 7
    P_SEMIC = 8
    P_ACCESSOR = 9
    L_PARENTHESIS = 10
    R_PARENTHESIS = 11
    L_BRACKET = 12
    R_BRACKET = 13
    L_BRACE = 14
    R_BRACE = 15
    O_PLUS = 16
    O_MINUS = 17
    O_TIMES = 18
    O_DIVIDE = 19
    O_EQUAL = 20
    O_NOT_EQUAL = 21
    O_LESS = 22
    O_GREATER = 23
    O_LESS_EQUAL = 24
    O_GREATER_EQUAL = 25
    O_BIT_AND = 26
    O_BIT_OR = 27
    O_BIT_XOR = 28
    O_BIT_NOT = 29
    NAMED = 30
    FROM = 31
    WITH = 32
    TO = 33
    FUNCTION = 34
    ARGUMENTS = 35
    WHILE = 36
    IF = 37
    ELSE = 38
    RETURNING = 39
    INLINE = 40
    FORCED = 41
    RETURN = 42
    BREAK = 43
    CONTINUE = 44
    PROCEDURE = 45
    DO = 46
    END = 47
    VARIABLE = 48
    CONSTANT = 49
    POINTER = 50
    ASSIGNED = 51
    ASSIGN = 52
    VALUE = 53
    INDEX = 54
    AT = 55
    NOT = 56
    CALL = 57
    V_IDENTIFIER = 58

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "','", "';'", "'('", "')'", "'['", "']'", "'{'", "'}'", 
            "'+'", "'-'", "'*'", "'/'", "'!='", "'<'", "'>'", "'<='", "'>='", 
            "'&'", "'|'", "'^'", "'named'", "'from'", "'with'", "'to'", 
            "'function'", "'arguments'", "'while'", "'if'", "'else'", "'returning'", 
            "'inline'", "'forced'", "'return'", "'break'", "'continue'", 
            "'procedure'", "'do'", "'end'", "'variable'", "'constant'", 
            "'pointer'", "'assigned'", "'assign'", "'value'", "'index'", 
            "'at'", "'not'", "'call'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "INLINE_COMMENT", "V_FLOAT", "V_INTEGER", "V_STRING", 
            "P_PERIOD", "P_COMMA", "P_SEMIC", "P_ACCESSOR", "L_PARENTHESIS", 
            "R_PARENTHESIS", "L_BRACKET", "R_BRACKET", "L_BRACE", "R_BRACE", 
            "O_PLUS", "O_MINUS", "O_TIMES", "O_DIVIDE", "O_EQUAL", "O_NOT_EQUAL", 
            "O_LESS", "O_GREATER", "O_LESS_EQUAL", "O_GREATER_EQUAL", "O_BIT_AND", 
            "O_BIT_OR", "O_BIT_XOR", "O_BIT_NOT", "NAMED", "FROM", "WITH", 
            "TO", "FUNCTION", "ARGUMENTS", "WHILE", "IF", "ELSE", "RETURNING", 
            "INLINE", "FORCED", "RETURN", "BREAK", "CONTINUE", "PROCEDURE", 
            "DO", "END", "VARIABLE", "CONSTANT", "POINTER", "ASSIGNED", 
            "ASSIGN", "VALUE", "INDEX", "AT", "NOT", "CALL", "V_IDENTIFIER" ]

    ruleNames = [ "WS", "INLINE_COMMENT", "V_FLOAT", "V_INTEGER", "V_STRING", 
                  "P_PERIOD", "P_COMMA", "P_SEMIC", "P_ACCESSOR", "L_PARENTHESIS", 
                  "R_PARENTHESIS", "L_BRACKET", "R_BRACKET", "L_BRACE", 
                  "R_BRACE", "O_PLUS", "O_MINUS", "O_TIMES", "O_DIVIDE", 
                  "O_EQUAL", "O_NOT_EQUAL", "O_LESS", "O_GREATER", "O_LESS_EQUAL", 
                  "O_GREATER_EQUAL", "O_BIT_AND", "O_BIT_OR", "O_BIT_XOR", 
                  "O_BIT_NOT", "NAMED", "FROM", "WITH", "TO", "FUNCTION", 
                  "ARGUMENTS", "WHILE", "IF", "ELSE", "RETURNING", "INLINE", 
                  "FORCED", "RETURN", "BREAK", "CONTINUE", "PROCEDURE", 
                  "DO", "END", "VARIABLE", "CONSTANT", "POINTER", "ASSIGNED", 
                  "ASSIGN", "VALUE", "INDEX", "AT", "NOT", "CALL", "V_IDENTIFIER", 
                  "DIGIT" ]

    grammarFileName = "Verbose.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


